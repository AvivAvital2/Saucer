//- ðŸ’« DOCS > USAGE > INSTALL > QUICKSTART

- QUICKSTART[QUICKSTART.length - 1].options = Object.keys(MODELS).map(m => ({ id: m, title: LANGUAGES[m] }))

+quickstart(QUICKSTART, "Quickstart")
    +qs({config: 'venv', python: 2}) python -m pip install -U virtualenv
    +qs({config: 'venv', python: 3}) python -m pip install -U venv
    +qs({config: 'venv', python: 2}) virtualenv .env
    +qs({config: 'venv', python: 3}) python -m venv .env
    +qs({config: 'venv', os: 'mac'}) source .env/bin/activate
    +qs({config: 'venv', os: 'linux'}) source .env/bin/activate
    +qs({config: 'venv', os: 'windows'}) .env\Scripts\activate

    +qs({package: 'pip'}) pip install -U spacy
    +qs({package: 'conda'}) conda install -c conda-forge spacy

    +qs({package: 'source'}) git clone https://github.com/explosion/spaCy
    +qs({package: 'source'}) cd spaCy
    +qs({package: 'source', os: 'mac'}) export PYTHONPATH=`pwd`
    +qs({package: 'source', os: 'linux'}) export PYTHONPATH=`pwd`
    +qs({package: 'source', os: 'windows'}) set PYTHONPATH=/path/to/spaCy
    +qs({package: 'source'}) pip install -r requirements.txt
    +qs({package: 'source'}) python setup.py build_ext --inplace

    for _, model in MODELS
        +qs({model: model}) python -m spacy download #{model}
